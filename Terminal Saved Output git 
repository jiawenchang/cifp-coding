Last login: Thu Apr 26 08:27:54 on console
8afbfb3f:~ jiawen$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ 
8afbfb3f:~ jiawen$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
8afbfb3f:~ jiawen$ clear

8afbfb3f:~ jiawen$ pwd
/Users/jiawen
8afbfb3f:~ jiawen$ ls
Applications		Pictures		first_files.txt
Desktop			Public			fruit.txt
Documents		abc.txt			hello.txt
Downloads		bash-exercise		ll.log
Library			dir			mydir
MacKeeper Backups	dir2			script.sh
Movies			dummy.txt
Music			executions.log
8afbfb3f:~ jiawen$ cd Desktop
8afbfb3f:Desktop jiawen$ ls
Bonfire leavers.pptx
Conference plan
Digital technologies .pptx
Photo on 22-1-18 at 8.10 PM #2.jpg
Screen Shot 2018-01-24 at 4.18.50 PM.png
Screen Shot 2018-03-10 at 10.31.22.png
Screen Shot 2018-04-13 at 11.29.46 pm.png
Screen Shot 2018-04-23 at 4.52.52 pm.png
Screen Shot 2018-04-23 at 4.55.59 pm.png
bus times.pdf
cifp EAI
cifp coding
cifp economics
cifp jan intake
cifp language and vocab
cifp mgmt
cifp reading
cifp sociology
cifp writing tasks
glasgow airport.pdf
irregular verbs .docx
~$amwork SWOT Analysis.docx
~$awen draft [1].docx
~$m Bacon.docx
~$ucation.docx
8afbfb3f:Desktop jiawen$ cd cifp coding
-bash: cd: cifp: No such file or directory
8afbfb3f:Desktop jiawen$ cd cifp\ coding/
8afbfb3f:cifp coding jiawen$ clear

8afbfb3f:cifp coding jiawen$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   linux notes.pages

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	Terminal Saved Output tutorial9
	git notes.pages

no changes added to commit (use "git add" and/or "git commit -a")
8afbfb3f:cifp coding jiawen$ git log
commit 3143e7b6a9bb5eadd4ee95215168fab2b8ad3559 (HEAD -> master)
Author: Chang Jia Wen <jiawen@8afbf5fc.st-andrews.ac.uk>
Date:   Fri Apr 20 17:00:30 2018 +0100

    First Commit
8afbfb3f:cifp coding jiawen$ git add .
8afbfb3f:cifp coding jiawen$ git commit -m "First Commit"
[master e7806e3] First Commit
 Committer: Chang Jia Wen <jiawen@8afbfb3f.st-andrews.ac.uk>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 3 files changed, 161 insertions(+)
 create mode 100644 Terminal Saved Output tutorial9
 create mode 100644 git notes.pages
 rewrite linux notes.pages (82%)
8afbfb3f:cifp coding jiawen$ git commit -m "First Commit"
On branch master
nothing to commit, working tree clean
8afbfb3f:cifp coding jiawen$ git add remote add origin https://github.com/jiawenchang/jwc22.git
fatal: pathspec 'remote' did not match any files
8afbfb3f:cifp coding jiawen$ pwd
/Users/jiawen/Desktop/cifp coding
8afbfb3f:cifp coding jiawen$ git remote add origin https://github.com/jiawenchang/cifp-coding.git
8afbfb3f:cifp coding jiawen$ git push origin master
Username for 'https://github.com': jiawenchang
Password for 'https://jiawenchang@github.com': 
Counting objects: 101, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (98/98), done.
Writing objects: 100% (101/101), 30.58 MiB | 634.00 KiB/s, done.
Total 101 (delta 12), reused 0 (delta 0)
remote: Resolving deltas: 100% (12/12), done.
To https://github.com/jiawenchang/cifp-coding.git
 * [new branch]      master -> master
8afbfb3f:cifp coding jiawen$ 
